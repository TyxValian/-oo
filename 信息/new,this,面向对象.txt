   闭包(必问):Closure
            函数套函数，子函数使用父函数的参数或者变量(作用域链，先看函数体内有没有这个变量或者函数，没有就找参数，还没有就到外面找，直到window结束)并且子函数被外界所引用（没释放）
                这个时候，父函数的参数或者变量不会被垃圾回收机制回收，此时在浏览器（chrome）
                中打印父级的返回值，在scopes下多了一个closure,closure就叫闭包。



 new是*函数*一元运算符,专门运算函数的。

            1、加了new之后，等同于函数执行，可以不用加括号，加括号的目的是为了传参。
            
            除函数意外使用new就报错 
                is not a constructor


            2、没有new之前，函数名+括号 this = window
                new之后，this变为实例化对象


            3、没有new之前，return后面跟着什么值，返回值就是什么值。
                new之后，如果return后面是简单类型，那么返回值是实例化对象
                如果return后面是引用类型，那么返回值就是return的对象

            4、没有new之前，不return默认返回值是undefined
                new之后，不return默认返回值是实例化对象




面向对象:（Object Oriented,OO）（构造函数+原型模式的一种结合）
            把相同的代码抽象出来，归为一类，把描述细节特征的功能挂在这个类的原型下的一种
            设计编程模式（思想）

            在js中，一切皆对象。


什么时候才会走原型链呢？
                当前使用这个对象的属性或者方法，自身没有就会走原型链

                通过原型链找到它构造函数的原型。


 包装对象:
            当简单类型去查找一个属性或者方法的时候，默认这个简单类型
            会转成对象类型，去找已经添加过的属性或者方法，找到之后
            这个对象自动销毁。（活雷锋）


        用new去创建简单类型，虽然是对象类型，但是他们的属性只能读，不能写

        valueOf可以看到数据最本质内容（原始值）。

            当new一个简单类型的内置类的时候，比如new String
            此时typeof为object，但是它实际上是一个字符串
            那么可以通过valueOf()去查看此数据的原始值。
