路由什么？
  一个地址,(/后面的名称告诉后台做什么)一个路径。路由地址。（后台做决定）
后端路由的问题：
  1，切换页面的时候会刷新页面，体验不好
 2，跳转到下一静态资源的时候，会重复请求
   
  ssr 服务器渲染，网络爬虫在抓取资源的时候会及时找到重要的资源
      有利于seo的优化，但是对服务器造成的压力较大，所以建议首页服务器渲染
    别的还是走ajax

前端路由：
   通过不同的路由切换，做不同的是
  优点
      用户所有的操作都在一个页面完成，单页应用，
     共享资源就只用请求一次


安装，引包，使用，配置
放到根下
vue.router
    new vue({
el:''
render:() =>
routes
})

然后渲染
《router-view》</router-view>




hash路由：#/ 后面的
history路由： / 



如果存在子级路由，记得找父级上添加《router-view》《/router-view》
此时的组件就显示

解决激活状态切换的时候，加不了事件(@click)  使用.native

  比如：
 @cilck.native= "
.native - 监听组件根元素的原生事件。 
主要是给自定义的组件添加原生事件。


如果要在刷新页面时候通过路由的信息来操作，
可以再created 下使用this.route


created：vue生命周期中的一环，表示在模板渲染成HTML
前调用，通常用来初始化某些属性值，然后渲染成视图
$route:表示当前正在用于跳转的路由器对象,为当前路由获取name,path,query,params

params:预设变量
注意:
                    如果使用params，那么就不能定义path，改为使用name
path：当前路由的路径
query:查询信息 ？号
hash ：hash信息#号

<router -link>自动转为一个a标签
to="/" 放一个字符就行 
：to的后面可以是一个字符串也可以是一个对象
：to='{path:'a'   }'
：to='{params:{a:5 }  }'
：to='{path:{a:5}   }'
如果是:to,那么路径要写成字符串 :to="'a'" 和 to是有区别的
            比如:
                to="a"
                :to="'a'"


 编程式路由:
$router:表示全局路由对象，通常用于调用一些方法($router.push/splace/go)


