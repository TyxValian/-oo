JQ转原生：
 加下标-
 $('li')---jq对象
 $('li')[0] ----原生对象

原生转JQ：
 $(原生对象)

$('ele').attr('key','val')
JQ基本上都有一个特性
传一个参数（字符串）是获取，传对象，批量设置
传二个参数是设置

prop专门操作表单元素
$('input').prop('checked',false)


index()
  默认父级为基准，找到子级的索引
小技巧：
 在使用index的时候，把精确匹配条件加上。
  index（'button'）
   以一堆button为依据，当前点击的是谁

siblings（）
   以当前节点为基准的所有兄弟节点
小技巧：
   因为兄弟节点包含的元素很多，使用的时候把精确匹配加上
 siblings（'div'）:
   找到所有兄弟节点为div的元素
addclass添加class
removeclass（）删除class

eq('index')
找到一组元素的某一个，且这个是JQ的对象

<button class="active">按钮一</button>
    <button>按钮二</button>
    <button>按钮三</button>
    <div class="show">111111111</div>
    <div >222222222</div>
    <div >333333333</div>


jquery('#box') -> <div id="box"></div>

        jquery(function(){
            //ready
        })

        noConflict为了解决重命名的问题
        jquery不可能每次都在window环境下，比如可能会在node，全局为this

        在浏览器中全局为window







(function(global,factory){
        factory(global);
       
    })(typeof window !== 'undefined'?window:this,function(global,noGlobal){
        function JQuery(seletcor){
            if(typeof seletcor === 'string'){
                seletcor = document.querySelectorAll(seletcor);
                this.ele = seletcor;
            }else if(typeof seletcor === 'function'){
                document.addEventListener('DOMContentLoaded',function(){
                    seletcor();
                });
            }
            // return new JQuery(seletcor);
        }
        /*
            一个参数为字符串的时候是获取，是对象就批量设置
        */
        JQuery.prototype.css = function(){
            // console.log(123);
            if(arguments.length === 1){
                if(typeof arguments[0] === 'string'){
                    return getComputedStyle(this.ele[0])[arguments[0]];
                }
            }
        }

        window.$ = window.JQuery = JQuery;
    });


JQ的无new化操作：

无new初始化操作:
            如果说直接在jquery中new，那么会递归
 
            解决:
                找一个替身，这个替身拥有jquery下的所有方法
                new替身即可



$('button').click(function(){
        $(this).addClass('active').siblings('button').removeClass('active');
        alert($(this).index('button'))
        $('div').eq($(this).index('button')).addClass('show').siblings('div').removeClass('show');
    });

