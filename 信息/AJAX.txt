 ajax:
            Asynchronous Javascript And XML
            异步的js和XML

            以前更多的是使用XML的数据格式，但是前端技术发展到今天
            数据格式更多的是json

            '[]'  '{}'  本质都是字符串 -> JSON.parse() eval() new Function()

        优点:
            1.无刷新更新数据(局部刷新)
                Ajax最大的优点就是能在不刷新整个页面的情况下维持与服务器通信

            2.异步与服务器通信
                使用异步的方式与服务器通信，不打断用户的操作

            3.前端与后端负载均衡
                将一些后端的工作移到前端，减少服务器与带宽的负担

            4.界面与应用分离
                Ajax使得界面与应用分离，也就是数据与呈现分离

        单页应用  单页SPA

        
        缺点:
            1.Ajax干掉了Back与History功能，即对浏览器机制的破坏
                 在动态更新页面的情况下，用户无法回到前一页的页面状态，因为浏览器仅能记忆历史纪录中的静态页面

            2.安全问题
                AJAX技术给用户带来很好的用户体验的同时也对IT企业带来了新的安全威胁，
                Ajax技术就如同对企业数据建立了一个直接通道。
                这使得开发者在不经意间会暴露比以前更多的数据和服务器逻辑。

            3.对搜索引擎支持较弱    
                SSR

            
             

            前后端数据通信（交互）的一种技术。
                （一种前端向后端请求数据的一种手段）前端向后端拿动态数据。


            难点:
                1.如何拿数据(掌握字段含义、服务器要什么客户端就传什么) **
                2.获取到数据之后，如何操作数据。****


        只要在服务器上，尽量不要取中文，尽量为英文和数字结合的文件夹

        http://localhost:80
            默认为192.168.0.1




 //xxx.com?a=5#id=0
    //?a=5 问号到井号之间的信息叫查询信息 window.location.search
    //key=val&key=val
    btn.onclick = function(){
        /*
            在IE下，有ActiveXObject插件，
            new ActiveXObject("Mscrosoft.XMLHttp");
        */
        let xhr = new XMLHttpRequest;
        /*
            请求方式有:
                GET、POST、DELETE、PUT

               GET通过URL的方式去请求的服务器
                
        */
        xhr.open('get','/get?ren='+txt.value,true);
        xhr.send();
        xhr.onload = function(){
            console.log(xhr.responseText);
        }


        //未来会用下面这个
        // fetch('/get?ren='+txt.value)
        // .then((e)=>e.json())
        // .then(data=>{
        //     console.log(data);
        // });
    }