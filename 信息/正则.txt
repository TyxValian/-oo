 正则:
            专门用来检索（模糊范围）字符串的一种规则
标准:new RegExp()   正则表示 new RegExp（）
                第一个参数：
                    可以放字符串或者正则，注意：如果是字符串形式的元字符，记得要转义。
                
                第二个参数:
                    修饰符
string.match(//)

        返回：正则匹配的字符串，包到一个数组中 || null

        如果只找到一个，数组中会显示
            index: 匹配到的索引, input: 整个字符串, groups: undefined


        正则的特性:
            懒惰:让它找一个它绝对不找第二个
            贪婪:尽可能多的匹配
string.replace(''||正则,''||callback);
            返回:新的字符串
            替换:把第一个参数替换第二个参数
            callback：
                正则每匹配到一次字符串就调用一次函数并且把匹配到的字符串放进去
[0-9] 数字的范围:
            [a-z] 小写字母范围
            [A-Z] 大写字母范围
            [A-Za-z] 小写|大写字母范围
            [\u4e00-\u9fa5] 中文范围


            16-130

            16-19   1[6-9]
            20-99   [2-9][0-9]
            100-129 1[0-2][0-9]
            130   130

            ^ 开头 
            $ 结尾
        \d  一个数字
        \D  一个非数字
        \s  一个空格
        \S  一个非空格
        \w  一个数字、字母、下划线
        \W  一个非数字、字母、下划线
        \b  一个边界符
        \B  一个非边界符
        \n  一个换行


        qq:/^[1-9]\d{4,10}$/,             /以1-9数字开头{4-9}表示为5-10位数，加上开头的数，结尾符/
        email:/^[A-Za-z]\w{5,17}@[1-9A-Za-z]{2,8}(\.(com|cn|net)){1,2}$/,
                                          /以字母开头，任意字符6到18为加上@数字加字母范围
        phone:/^1[345789]\d{9}$/,
        day:/^\d+\D+\d+\D+\d+\D*$/