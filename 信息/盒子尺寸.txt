当前看得见的尺寸:
            ele.clientWidth/ele.clientHeight  number类型的
            支持padding，不支持border

        
        既支持border也支持padding的
            offsetWidth/offsetHeight;

        如果没有固定的宽高且被内容撑开，那么会计算被内容撑开的高度。


        就算有固定宽高，也能获取被内容撑开的高度(实测不包含边框)
            scrollWidth/scrollHeight


 offsetLeft:
            子元素的左外边框到定位父级的左内边框的距离

 offsetTop:
            子元素的上外边框到定位父级的上内边框的距离

 offsetParent   定位父级
 clientLeft/clientTop
            元素的左边框/元素的上边框

        如果子级没有定位，默认走body

元素绝对位置的计算-------思路:
            先计算当前元素的定位距离和边框，当前元素有定位父级，再计算（包括边框），定位父级的
            定位距离，一直到没有定位父级，就不计算了，最后减去目标元素的左边框。



自己总结：
   子元素外边框到父元素内边框的距离-------  （offset）
   可视区的尺寸：（width，height）-----------
                  （client）表现为支持padding不支持border    
      支持padding和border的为（offset）-没有固定高度会被内容撑开，会计算撑开的高度
                  （scroll）表现为就算有固定的高度，也能获取撑开的高度
   定位父级元素：（offsetParent）
                   